generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")   // pooler 6543
  directUrl = env("DIRECT_URL")
}

enum Section {
  Filosofos_de_la_antiguedad
  Renovadores_del_renacimiento
  Difusores_contemporaneos
  Populares_de_la_actualidad
}

enum Role {
  admin
  user
}

/*model User{
    id Int @id @default(autoincrement())
    username String @unique
    password String
    comentarios Comentario[]   
    role Role @default(user)
}*/

model User {
  id           Int       @id @default(autoincrement())
  username     String?
  email        String    @unique
  password     String
  role         Role       @default(user)
  comentarios Comentario[]

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@index([role])  
}

model Autor{
    id Int @id @default(autoincrement())
    nombre String
    epoca String
    books Book[]
}

model Comentario {
    id Int @id @default(autoincrement())
    texto String?
    userId Int
    user  User  @relation(fields: [userId], references: [id])
    bookId Int
    book  Book  @relation(fields: [bookId], references: [id])
}

model Book {
  id      Int     @id @default(autoincrement())
  titulo   String
  img     String?     // opcional como definiste
  seccion Section
  comentarios Comentario[]
  autorId Int
  autor  Autor  @relation(fields: [autorId], references: [id])
  @@unique([titulo, autorId]) // ← evita duplicados por título+autor
}
