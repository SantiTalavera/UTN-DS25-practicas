version: '3.8'
services:
  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: app_frontend
    env_file:
      - frontend/.env
    #environment:
      #- VITE_API_URL=http://localhost:3000
      #- PORT=5173
      #- HOST=0.0.0.0
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
  # Backend Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app_backend
    env_file:
      - ./backend/.env
    #environment:
      #NODE_ENV: ${NODE_ENV}
      #PORT: "${PORT}"
      #JWT_SECRET: ${JWT_SECRET}
      #JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      #FRONTEND_URL: http://localhost:5173
      #DATABASE_URL: ${DATABASE_URL}
      #DIRECT_URL: ${DIRECT_URL}
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
  # Base de Datos PostgreSQL
  db:
    image: postgres:14-alpine
    container_name: app_db
    env_file:
     - ./backend/.env
    #environment:
      #POSTGRES_USER: ${POSTGRES_USER}
      #POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      #POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  postgres_data:
    driver: local